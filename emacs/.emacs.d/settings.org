#+TITLE: Emacs configuration
#+AUTHOR: Zach Orosz and everyone I copied

* Custom File

Dump custom settings to ==custom.el==.

#+BEGIN_SRC emacs-lisp
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(when (file-exists-p custom-file) (load custom-file))
#+END_SRC

* Defaults

Use spaces instead of tabs.

#+BEGIN_SRC emacs-lisp
(setq-default indent-tabs-mode-nil)
#+END_SRC

Show line numbers.

#+BEGIN_SRC emacs-lisp
(when (version<= "26.0.50" emacs-version )
  (global-display-line-numbers-mode))
#+END_SRC

Show cursor position in the mode line.

#+BEGIN_SRC emacs-lisp
(setq column-number-mode t)
#+END_SRC

Use ==y or n== prompts instead of ==yes or no==.

#+BEGIN_SRC emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
#+END_SRC

** Disabled Features

No startup screen.

#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-screen 1)
#+END_SRC

Hide menu, scroll, and tool bars.

#+BEGIN_SRC emacs-lisp
(menu-bar-mode 0)
(scroll-bar-mode 0)
(tool-bar-mode 0)
#+END_SRC

Turn off auto-save.

#+BEGIN_SRC emacs-lisp
(setq auto-save-default nil)
#+END_SRC

Do not make backup files.

#+BEGIN_SRC emacs-lisp
(setq make-backup-files nil)
#+END_SRC

* Packages

** exec-path-from-shell

In MacOS and Linux, make sure environment variables are sourced from the user's shell.

#+BEGIN_SRC emacs-lisp
(use-package exec-path-from-shell
  :if (memq window-system '(mac ns x))
  :ensure t
  :config
  (setq exec-path-from-shell-variables '("PATH" "GOPATH" "NVM_DIR"))
  (exec-path-from-shell-initialize))
#+END_SRC

** which-key

#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :config
  (which-key-mode))
#+END_SRC

** helm

#+BEGIN_SRC emacs-lisp
(use-package helm
  :ensure t
  :init
  (require 'helm-config)
  :config
  (global-set-key (kbd "M-x") #'helm-M-x)
  (global-set-key (kbd "C-x r b") #'helm-filtered-bookmarks)
  (global-set-key (kbd "C-x C-f") #'helm-find-files)
  (helm-mode 1))
#+END_SRC

** projectile

Project management and integration with helm.

#+BEGIN_SRC emacs-lisp
(use-package projectile
  :ensure t
  :config
  (global-set-key (kbd "C-c p") 'projectile-command-map)
  (projectile-mode))

(use-package helm-projectile
  :ensure t
  :config
  (helm-projectile-on))
#+END_SRC

** magit

Version control.

#+BEGIN_SRC emacs-lisp
(use-package magit
  :ensure t
  :config
  (global-set-key (kbd "C-x g") 'magit-status))
#+END_SRC

** company

Autocompletion.

#+BEGIN_SRC emacs-lisp
(use-package company
  :ensure t
  :config
  (setq company-idle-delay 0)
  (setq company-minimum-prefix-length 1)
  (add-hook 'after-init-hook 'global-company-mode))
#+END_SRC

** flycheck

Syntax checking.

#+BEGIN_SRC emacs-lisp
(use-package flycheck
  :ensure t
  :init (global-flycheck-mode)
  :config
  (setq-default flycheck-disabled-checkers '(emacs-lisp-checkdoc)))
#+END_SRC

** Programming

*** lsp-mode

Use language server protocols.

#+BEGIN_SRC emacs-lisp
(use-package lsp-mode
  :ensure t
  :commands (lsp lsp-deferred)
  :hook (;; Add major-modes
   (go-mode . lsp-deferred)
   (typescript-mode . lsp-deferred)
   ;; which-key integration
   (lsp-mode . lsp-enable-which-key-integration)))

;; Set up before-save hooks to format buffer and add/delete go imports
(defun z/lsp-go-install-save-hooks ()
  (add-hook 'before-save-hook #'lsp-format-buffer t t)
  (add-hook 'before-save-hook #'lsp-organize-imports t t))
(add-hook 'go-mode-hook #'z/lsp-go-install-save-hooks)

;; Optionally
(use-package lsp-ui
  :ensure t
  :commands lsp-ui-mode)

(use-package helm-lsp
  :ensure t
  :commands helm-lsp-workspace-symbol)
#+END_SRC
